name: Release

on:
  push:
    branches:
      - release
    tags-ignore: [ '**' ]

jobs:
  versionning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.pre-rel.outputs.version }}
      release: ${{ steps.release.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0

    - name: Generate Pre-Release Version
      id: pre-rel
      uses: codacy/git-version@2.7.1
      with:
        minor-identifier: "feat:"
        release-branch: ${{ github.ref_name }}-pre
        dev-branch: ${{ github.ref_name }}

    - name: Generate Release Version
      id: release
      uses: codacy/git-version@2.7.1
      with:
        minor-identifier: "feat:"
        release-branch: ${{ github.ref_name }}
        dev-branch: main

    - name: Print version
      run: |
        echo PREREL ${{ steps.pre-rel.outputs.version }} >> $GITHUB_STEP_SUMMARY
        echo RELASE ${{ steps.release.outputs.version }} >> $GITHUB_STEP_SUMMARY


  tagImagesRelease:
    runs-on: ubuntu-latest
    needs:
      - versionning
    env:
      VERSION: ${{ needs.versionning.outputs.version }}
      RELEASE: ${{ needs.versionning.outputs.release }}
    strategy:
      fail-fast: true
      matrix:
        image:
        - dockerhubaneo/armonik_pollingagent
        - dockerhubaneo/armonik_control_metrics
        - dockerhubaneo/armonik_control_partition_metrics
        - dockerhubaneo/armonik_control
        - dockerhubaneo/armonik_core_stream_test_worker
        - dockerhubaneo/armonik_core_stream_test_client
        - dockerhubaneo/armonik_core_htcmock_test_worker
        - dockerhubaneo/armonik_core_htcmock_test_client
        - dockerhubaneo/armonik_core_bench_test_worker
        - dockerhubaneo/armonik_core_bench_test_client
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        submodules: true

    - name: login
      run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_LOGIN }} --password-stdin

    - name: ReTag release
      run: docker buildx imagetools create ${{ matrix.image }}:${VERSION} --tag ${{ matrix.image }}:${RELEASE}

    - name: ReTag latest
      run: docker buildx imagetools create ${{ matrix.image }}:${VERSION} --tag ${{ matrix.image }}:latest

  tag:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/release' }}
    needs:
      - versionning
      - tagImagesRelease
    env:
      RELEASE: ${{ needs.versionning.outputs.release }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}

    - name: tag
      run: |
        git tag $RELEASE
        git push origin $RELEASE
